{"version":3,"sources":["Components/SearchPage.module.css","api/api.ts","Components/SearchPatientPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","headers","API","values","get","SearchPatientPage","useState","address","birthDate","gender","id","identifier","name","resourceType","state","setState","error","setError","formik","useFormik","initialValues","search","onSubmit","then","res","data","entry","resource","catch","e","message","resetForm","handleSubmit","className","s","input","type","getFieldProps","placeholder","undefined","family","given","text","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,MAAQ,4B,oKC6BpBC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,mFACTC,QAAS,CACL,OAAU,mBACV,cAAgB,UAAhB,OAA2B,gCAC3B,8BAA+B,OAK1BC,EAAM,SACRC,GACH,OAAON,EAASO,IAAT,kBAAiCD,EAAjC,kB,wBCmBAE,MAvDf,WAA8B,IAAD,EACDC,mBAAuB,CAC3CC,QAAS,GACTC,UAAW,GACXC,OAAQ,GACRC,GAAI,GACJC,WAAY,GACZC,KAAM,GACNC,aAAc,KARO,mBACpBC,EADoB,KACbC,EADa,OAUDT,mBAAS,IAVR,mBAUpBU,EAVoB,KAUbC,EAVa,KAYnBC,EAASC,YAAU,CAErBC,cAAe,CACXC,OAAQ,IAEZC,SAAU,SAAAnB,GACND,EAAWC,EAAOkB,QACbE,MAAK,SAAAC,GACFT,EAASS,EAAIC,KAAKC,MAAM,GAAGC,UAC3BV,EAAS,wBAEZW,OAAM,SAAAC,GAAC,OAAIZ,EAASY,EAAEC,YAE3BZ,EAAOa,YACPhB,EAAS,CACLR,QAAS,GACTC,UAAW,GACXC,OAAQ,GACRC,GAAI,GACJC,WAAY,GACZC,KAAM,GACNC,aAAc,QAI1B,OAAQ,gCACA,uBAAMS,SAAUJ,EAAOc,aAAvB,UACI,+CAAOC,UAAWC,IAAEC,MAAOC,KAAM,QAAYlB,EAAOmB,cAAc,WAAlE,IACOC,YAAa,4BACpB,wBAAQF,KAAM,SAAd,4BAEeG,IAAlBzB,EAAMF,KAAK,GACR,gCACI,+BAAKE,EAAMF,KAAK,GAAG4B,OAAnB,IAA4B1B,EAAMF,KAAK,GAAG6B,MAAM,MAChD,2CAAc3B,EAAMN,aACpB,yCAAYM,EAAML,UAClB,0CAAaK,EAAMP,QAAQ,GAAGmC,WACzB,8BAAgB,0CAAV1B,EAAoD,oBAAsBA,QC3C1F2B,MARf,WACI,OACI,qBAAKV,UAAU,MAAf,SACI,cAAC,EAAD,OCOGW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5523144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchPage_input__1UwR8\"};","import axios from 'axios'\r\n\r\n\r\ntype resType = {\r\n    entry: Array<entryType>\r\n    id: string\r\n    link: any\r\n    meta: { lastUpdated: string }\r\n    resourceType: string\r\n    total: number\r\n    type: string\r\n}\r\n\r\nexport type resourceType = {\r\n    address: any\r\n    birthDate: string\r\n    gender: string\r\n    id: string\r\n    identifier: any\r\n    name: any\r\n    resourceType: string\r\n}\r\n\r\n\r\ntype entryType = {\r\n    fullUrl: string\r\n    link: any\r\n    resource: resourceType\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://api.orionhealth.io/fhir/3.0/Patient/',\r\n    headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": `Bearer ${\"KKS11qBTukBbmCUircGVB3FZprTN\"}`,\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n})\r\n\r\n\r\nexport const API = {\r\n    search(values: string) {\r\n        return instance.get<resType>(`?family=${values}&gender=male`)\r\n    }\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {API, resourceType} from \"../api/api\";\r\nimport s from \"./SearchPage.module.css\"\r\n\r\n\r\nfunction SearchPatientPage() {\r\n    let [state, setState] = useState<resourceType>({\r\n        address: [],\r\n        birthDate: \"\",\r\n        gender: \"\",\r\n        id: \"\",\r\n        identifier: [],\r\n        name: [],\r\n        resourceType: \"\"\r\n    })\r\n    let [error, setError] = useState(\"\")\r\n\r\n    const formik = useFormik({\r\n\r\n        initialValues: {\r\n            search: ''\r\n        },\r\n        onSubmit: values => {\r\n            API.search(values.search)\r\n                .then(res => {\r\n                    setState(res.data.entry[0].resource)\r\n                    setError(\"Patient not found\")\r\n                })\r\n                .catch(e => setError(e.message))\r\n\r\n            formik.resetForm()\r\n            setState({\r\n                address: [],\r\n                birthDate: \"\",\r\n                gender: \"\",\r\n                id: \"\",\r\n                identifier: [],\r\n                name: [],\r\n                resourceType: \"\"\r\n            })\r\n        },\r\n    })\r\n    return (<div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <input className={s.input} type={'text'} {...formik.getFieldProps(\"search\")}\r\n                       placeholder={'enter your search term'}/>\r\n                <button type={'submit'}>Search</button>\r\n            </form>\r\n            {state.name[0] !== undefined ?\r\n                <div>\r\n                    <h3>{state.name[0].family} {state.name[0].given[0]}</h3>\r\n                    <p>Birthday: {state.birthDate}</p>\r\n                    <p>Gender: {state.gender}</p>\r\n                    <p>Address: {state.address[0].text}</p>\r\n                </div> : <div>{error === \"Cannot read property '0' of undefined\" ? \"Patient not found\" : error}</div>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchPatientPage;\r\n","import React from 'react';\nimport './App.css';\nimport SearchPatientPage from \"./Components/SearchPatientPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <SearchPatientPage/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}